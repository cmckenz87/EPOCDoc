"use strict";(self.webpackChunkdisc_ops_docs=self.webpackChunkdisc_ops_docs||[]).push([[158],{4691:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var a=t(4848),r=t(8453);const i={sidebar_position:1,title:"Activity"},s="Activity",l={id:"docs/Rule types/activity",title:"Activity",description:"Overview",source:"@site/docs/docs/03-Rule types/activity.md",sourceDirName:"docs/03-Rule types",slug:"/docs/Rule types/activity",permalink:"/EPOCDoc/docs/Rule types/activity",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Activity"},sidebar:"docsSidebar",previous:{title:"Proxy objects",permalink:"/EPOCDoc/docs/Script basics/proxyObjects"},next:{title:"Data transform",permalink:"/EPOCDoc/docs/Rule types/dataTransform"}},o={},d=[{value:"Overview",id:"overview",level:2},{value:"Placement within class",id:"placement-within-class",level:2},{value:"Inheritance",id:"inheritance",level:3},{value:"Defining the function",id:"defining-the-function",level:2},{value:"Arguments",id:"arguments",level:3},{value:"Pages &amp; Classes",id:"pages--classes",level:3},{value:"Organization",id:"organization",level:3},{value:"Methods",id:"methods",level:3},{value:"Pseudo-Methods",id:"pseudo-methods",level:3},{value:"Expressions",id:"expressions",level:3},{value:"Async execution",id:"async-execution",level:3},{value:"Implementing methods",id:"implementing-methods",level:2},{value:"Pseudo-Methods",id:"pseudo-methods-1",level:3},{value:"For: Each Embedded Page",id:"for-each-embedded-page",level:4},{value:"For: Single iteration For Loop",id:"for-single-iteration-for-loop",level:4},{value:"Jump to later step: breaking loop",id:"jump-to-later-step-breaking-loop",level:4},{value:"Jump to later step: error handling",id:"jump-to-later-step-error-handling",level:4},{value:"Call",id:"call",level:3},{value:"Apply-DataTransform",id:"apply-datatransform",level:3},{value:"Exit-Activity",id:"exit-activity",level:3},{value:"Obj-Browse",id:"obj-browse",level:3},{value:"Obj-Delete",id:"obj-delete",level:3},{value:"Obj-Filter",id:"obj-filter",level:3},{value:"Obj-Open",id:"obj-open",level:3},{value:"Obj-Open-By-Handle *",id:"obj-open-by-handle-",level:3},{value:"Obj-Save",id:"obj-save",level:3},{value:"Obj-Save-Cancel *",id:"obj-save-cancel-",level:3},{value:"Obj-Sort",id:"obj-sort",level:3},{value:"Obj-Validate",id:"obj-validate",level:3},{value:"Page-Clear-Messages",id:"page-clear-messages",level:3},{value:"Page-Copy",id:"page-copy",level:3},{value:"Page-Merge-Into",id:"page-merge-into",level:3},{value:"Page-New",id:"page-new",level:3},{value:"Page-Remove",id:"page-remove",level:3},{value:"Page-Rename *",id:"page-rename-",level:3},{value:"Page-Set-Messages *",id:"page-set-messages-",level:3},{value:"Property-Map-DecisionTable *",id:"property-map-decisiontable-",level:3},{value:"Property-Map-DecisionTree *",id:"property-map-decisiontree-",level:3},{value:"Property-Remove",id:"property-remove",level:3},{value:"Property-Set",id:"property-set",level:3},{value:"RDB-Delete",id:"rdb-delete",level:3},{value:"RDB-List",id:"rdb-list",level:3},{value:"RDB-Open",id:"rdb-open",level:3},{value:"RDB-Save",id:"rdb-save",level:3},{value:"Rollback *",id:"rollback-",level:3},{value:"Set",id:"set",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Example",id:"example",level:4},{value:"Remove",id:"remove",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Example",id:"example-1",level:4},{value:"Update Page",id:"update-page",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Example",id:"example-2",level:4},{value:"Apply Data Transform",id:"apply-data-transform",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Example",id:"example-3",level:4},{value:"Sort",id:"sort",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Example",id:"example-4",level:4},{value:"Comment",id:"comment",level:3},{value:"Parameters",id:"parameters-5",level:4},{value:"Example",id:"example-5",level:4},{value:"When",id:"when",level:3},{value:"Parameters",id:"parameters-6",level:4},{value:"Example",id:"example-6",level:4},{value:"Otherwise When",id:"otherwise-when",level:3},{value:"Parameters",id:"parameters-7",level:4},{value:"Example",id:"example-7",level:4},{value:"Otherwise",id:"otherwise",level:3},{value:"Parameters",id:"parameters-8",level:4},{value:"Example",id:"example-8",level:4},{value:"Append to",id:"append-to",level:3},{value:"Parameters",id:"parameters-9",level:4},{value:"Example",id:"example-9",level:4},{value:"Append and Map to",id:"append-and-map-to",level:3},{value:"Parameters",id:"parameters-10",level:4},{value:"Example",id:"example-10",level:4},{value:"For Each Page In",id:"for-each-page-in",level:3},{value:"Parameters",id:"parameters-11",level:4},{value:"Example",id:"example-11",level:4},{value:"Exit For Each",id:"exit-for-each",level:3},{value:"Example",id:"example-12",level:4},{value:"Exit Data Transform",id:"exit-data-transform",level:3},{value:"Example",id:"example-13",level:4},{value:"Backlog",id:"backlog",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"activity",children:"Activity"}),"\n",(0,a.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(n.p,{children:"Out of the box, CfW offers no support whatsoever for activities."}),"\n",(0,a.jsx)(n.p,{children:"Using EPOC, activities with a certain set of supported methods can be configured for offline. Such activities can be called through a function, as flow action pre/post processing, or from UI actions."}),"\n",(0,a.jsx)(n.p,{children:"In addition to using a limited set of methods, best results will be achieved if activities adhere to the following:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Avoid defining a method directly in the same step with Loop configured. Add the method as a child step instead."}),"\n",(0,a.jsx)(n.li,{children:"Avoid the use of Jump. Create an additional step with a When instead if needed."}),"\n",(0,a.jsx)(n.li,{children:"Use step pages only where it is essential to do so. Many EPOC methods do not support step pages. For example, during Property-Set, the page should be explicitly referred to"}),"\n",(0,a.jsx)(n.li,{children:"Avoid use of multiple lines in a When statement. Combine them into a single line or split the lines into multiple activity steps."}),"\n",(0,a.jsxs)(n.li,{children:['Limit the use of "jump to later step".',"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"It is permitted to use it for exception handling and for breaking out of a loop. See Pseudo-methods."}),"\n",(0,a.jsx)(n.li,{children:'When it is used to skip multiple steps, instead group the steps to be skipped under a common parent For loop that executes exactly one, with a when condition indicating when the "block" should be run or skipped.'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"placement-within-class",children:"Placement within class"}),"\n",(0,a.jsxs)(n.p,{children:["Each activity is implemented as a function inside of the activity map of the ",(0,a.jsx)(n.a,{href:"/docs/Script%20basics/rulesPrototype",children:"rules prototype"})," for the class."]}),"\n",(0,a.jsx)(n.p,{children:"For example, the following class defines one activity, called UpdateQuantitiesAndSerials."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"class GCSS_DiscOps_Work_Goods_Issue extends GCSS_DiscOps_Work_Goods_Issue {\n  static _rulesPrototype = {\n    activity: {\n      UpdateQuantitiesAndSerials: (Primary, myStepPage, Param) => {\n        //activity body here\n      },\n    },\n  };\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"inheritance",children:"Inheritance"}),"\n",(0,a.jsxs)(n.p,{children:["See ",(0,a.jsx)(n.a,{href:"http://localhost:3000/docs/Script%20basics/inheritance",children:"Inheritance"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Activities defined in a parent class can be run in the context of a child class, without requiring the rule to be defined in the rules prototype of the latter. If the same rule name is defined in the parent class and child class, the child's function will be used at runtime."}),"\n",(0,a.jsx)(n.h2,{id:"defining-the-function",children:"Defining the function"}),"\n",(0,a.jsx)(n.h3,{id:"arguments",children:"Arguments"}),"\n",(0,a.jsxs)(n.p,{children:["Each function should accept 3 arguments. When invoked by the platform, a ",(0,a.jsx)(n.a,{href:"/docs/Script%20basics/proxyObjects#clipboardreference",children:"ClipboardReference"})," pointing to the primary page will be passed for the first two arguments, and a ",(0,a.jsx)(n.a,{href:"/docs/Script%20basics/proxyObjects#parameterpage",children:"ParameterPage"})," will be passed as the third argument."]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"As a best practice, name these arguments Primary, myStepPage, and Param, so that expressions can be built exactly as they would be in a transform rule. The same reference is passed for both the first and second argument, so that a flexible syntax can be used when building expressions."})}),"\n",(0,a.jsx)(n.h3,{id:"pages--classes",children:"Pages & Classes"}),"\n",(0,a.jsx)(n.p,{children:"Except for the primary page, any top-level page referenced within the body of the activity should be declared at the top of the function. For a named page of a given class, bind the variable to a new instance of that page pointing to the page name. For example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'const NewEquipment = new GCSS_DiscOps_Data_Equipment("NewEquipment");\n'})}),"\n",(0,a.jsx)(n.p,{children:"For a name paged where the class is $ANY or the class otherwise does not matter, bind it to a ClipboardReference instead. For example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'const TempPage = new ClipboardReference("TempPage");\n'})}),"\n",(0,a.jsx)(n.p,{children:"If a page name parameter is used, use a variable with the same name as the parameter, but refer to the parameter page when constructing the new instance. For example:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"const EquipPage = new GCSS_DiscOps_Data_Equipment(Param.EquipPage);\n"})}),"\n",(0,a.jsx)(n.h3,{id:"organization",children:"Organization"}),"\n",(0,a.jsx)(n.p,{children:"For best readability, modify code using VSCode with Prettier extension. It is recommended to use a tab size of 2, and configure Prettier with a very large print width (800+)."}),"\n",(0,a.jsx)(n.p,{children:"The goal with this formatting is to ensure each plain activity step is represented by exactly one line. Steps with children always include a function as one of their arguments. The formatting will ensure that the child steps are each put on their own new line with an additional tab, following the tree structure of the rule form."}),"\n",(0,a.jsx)(n.p,{children:"For example, this is a somewhat complex activity with multiple levels of child steps:"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.img,{alt:"Example",src:t(7631).A+"",width:"1231",height:"467"})}),"\n",(0,a.jsx)(n.p,{children:"This is how the same activity may be written as a function. Each step is represented by one call to an Activity static method, and the indentation follows the tree structure of the activity steps."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'UpdateQuantitiesAndSerials: async (Primary, myStepPage, Param) => {\n  const MaterialOnHand = new GCSS_DiscOps_Data_MaterialOnHand("MaterialOnHand");\n  const Requirement = new GCSS_DiscOps_Data_Requirement("Requirement");\n\n  await Activity.call("SaveSyncStatus");\n  Activity.propertySet([[myStepPage.Data.CaseStatus, "Resolved-Completed"]]);\n  await Activity.forEachEmbedded(myStepPage.Data.EligibleMaterialOnHandList, async (myStepPage) => {\n    Activity.when([[myStepPage.Data.EligibleMaterialOnHandList.QuantityToIssue > 0, continueWhens, exitIteration]]);\n    Activity.pageCopy(myStepPage, MaterialOnHand);\n    Activity.propertySet([[MaterialOnHand.Stock, MaterialOnHand.Stock - Rule.function.toDecimal(myStepPage.QuantityToIssue)]]);\n    Activity.propertyRemove([MaterialOnHand.Type, MaterialOnHand.QuantityToIssue, MaterialOnHand.pyIsSelected, MaterialOnHand.PegaID, MaterialOnHand.pxPages, MaterialOnHand.IsSubstitute]);\n    await Activity.objSave(MaterialOnHand);\n  });\n  await Activity.whenBlock("", myStepPage, true, async (myStepPage) => {\n    Activity.pageCopy("", myStepPage.Data.ManualReservation, Requirement);\n    Activity.propertySet("", [[Requirement.QuantityWithdrawn, Requirement.QuantityWithdrawn + myStepPage.Data.QuantityToIssueTotal]]);\n    Activity.propertyRemove("", [Requirement.MaterialType, Requirement.MaterialOnHand, Requirement.pxPages]);\n    await Activity.objSave("", Requirement);\n  });\n  Activity.pageRemove("", [MaterialOnHand, Requirement]);\n};\n'})}),"\n",(0,a.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,a.jsx)(n.p,{children:"Each step method is represented one-to-one by a static method of the Activity object, as indicated below:"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Method"}),(0,a.jsx)(n.th,{children:"Function"}),(0,a.jsx)(n.th,{children:"Arguments"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#call",children:"Call"})}),(0,a.jsx)(n.td,{children:"Activity.call"}),(0,a.jsx)(n.td,{children:"(activityName, stepPage)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#apply-data-transform",children:"Apply-DataTransform"})}),(0,a.jsx)(n.td,{children:"Activity.applyDataTransform"}),(0,a.jsx)(n.td,{children:"(transformName, parameters, stepPage)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#commit",children:"Commit"})}),(0,a.jsx)(n.td,{children:"Activity.commit"}),(0,a.jsx)(n.td,{children:"()"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#exit-activity",children:"Exit-Activity"})}),(0,a.jsx)(n.td,{children:"Activity.exitActivity"}),(0,a.jsx)(n.td,{children:"()"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#obj-delete",children:"Obj-Delete"})}),(0,a.jsx)(n.td,{children:"Activity.delete"}),(0,a.jsx)(n.td,{children:"(stepPage)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#obj-save",children:"Obj-Save"})}),(0,a.jsx)(n.td,{children:"Activity.objSave"}),(0,a.jsx)(n.td,{children:"(stepPage)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#obj-sort",children:"Obj-Sort"})}),(0,a.jsx)(n.td,{children:"Activity.objSort"}),(0,a.jsx)(n.td,{children:"(target, sortProperties)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#obj-validate",children:"Obj-Validate"})}),(0,a.jsx)(n.td,{children:"Activity.objValidate"}),(0,a.jsx)(n.td,{children:"(validateName, stepPage)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#page-clear-messages",children:"Page-Clear-Messages"})}),(0,a.jsx)(n.td,{children:"Activity.pageClearMessages"}),(0,a.jsx)(n.td,{children:"(stepPage)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#page-copy",children:"Page-Copy"})}),(0,a.jsx)(n.td,{children:"Activity.pageCopy"}),(0,a.jsx)(n.td,{children:"(copyFrom, copyInto)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#page-merge-into",children:"Page-Merge-Into"})}),(0,a.jsx)(n.td,{children:"Activity.pageMergeInto"}),(0,a.jsx)(n.td,{children:"(keep, mergeFromList, stepPage)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#page-new",children:"Page-New"})}),(0,a.jsx)(n.td,{children:"Activity.pageNew"}),(0,a.jsx)(n.td,{children:"(stepPage)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#page-remove",children:"Page-Remove"})}),(0,a.jsx)(n.td,{children:"Activity.pageRemove"}),(0,a.jsx)(n.td,{children:"(pages)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#property-remove",children:"Property-Remove"})}),(0,a.jsx)(n.td,{children:"Activity.propertyRemove"}),(0,a.jsx)(n.td,{children:"(properties)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#property-set",children:"Property-Set"})}),(0,a.jsx)(n.td,{children:"Activity.propertySet"}),(0,a.jsx)(n.td,{children:"(propertyValuePairs)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#rdb-delete",children:"RDB-Delete"})}),(0,a.jsx)(n.td,{children:"Activity.rdbDelete"}),(0,a.jsx)(n.td,{children:"(class, requestType)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#rdb-list",children:"RDB-List"})}),(0,a.jsx)(n.td,{children:"Activity.rdbList"}),(0,a.jsx)(n.td,{children:"(class, requestType)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#rdb-open",children:"RDB-Open"})}),(0,a.jsx)(n.td,{children:"Activity.rdbOpen"}),(0,a.jsx)(n.td,{children:"(class, requestType)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"#rdb-save",children:"RDB-Save"})}),(0,a.jsx)(n.td,{children:"Activity.rdbSave"}),(0,a.jsx)(n.td,{children:"(class, requestType)"})]})]})]}),"\n",(0,a.jsx)(n.admonition,{type:"danger"}),"\n",(0,a.jsx)(n.p,{children:"For more information on configuring client store to support database interactions, see XXX."}),"\n",(0,a.jsx)(n.h3,{id:"pseudo-methods",children:"Pseudo-Methods"}),"\n",(0,a.jsx)(n.p,{children:"When configuring a step without a method, such as the parent step for a loop, use one following methods"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Step type"}),(0,a.jsx)(n.th,{children:"Function"}),(0,a.jsx)(n.th,{children:"Arguments"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Loop: For each embedded Page"}),(0,a.jsx)(n.td,{children:"Activity.forEachEmbeddedPage"}),(0,a.jsx)(n.td,{children:"(activityName, stepPage)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"Loop: For Loop (single iteration)"}),(0,a.jsx)(n.td,{children:"Activity.whenBlock"}),(0,a.jsx)(n.td,{children:"(transformName, parameters, stepPage)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"When (if false, skip step)"}),(0,a.jsx)(n.td,{children:"Activity.when"}),(0,a.jsx)(n.td,{children:"(stepPage)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"When (if false, exit iteration)"}),(0,a.jsx)(n.td,{children:"Activity.when"}),(0,a.jsx)(n.td,{children:"(stepPage)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"When (if false, jump to later step)"}),(0,a.jsx)(n.td,{children:"Activity.when"}),(0,a.jsx)(n.td,{children:"(stepPage)"})]})]})]}),"\n",(0,a.jsx)(n.admonition,{type:"danger"}),"\n",(0,a.jsx)(n.p,{children:"For more information on configuring client store to support database interactions, see XXX."}),"\n",(0,a.jsx)(n.h3,{id:"expressions",children:"Expressions"}),"\n",(0,a.jsx)(n.p,{children:'When building expressions, literal values and references to properties can be written as they are in activity rules, except that property references must explicitly name the page (a reference leading with a period is not valid in JavaScript). If recommended naming of parameters is followed, "Primary" may be used to refer to the primary page of the data transform, and "myStepPage" can be used to refer to the page from the current context.'}),"\n",(0,a.jsx)(n.p,{children:"To call when rules, call functions, or reference data pages, a different syntax is required. (TBD)"}),"\n",(0,a.jsxs)(n.admonition,{type:"tip",children:[(0,a.jsx)(n.p,{children:"To ensure the script is as consistent as possible with the online rule, consider using explicit page references such as Primary and myStepPage when properties are referenced, and use expressions with syntax mimicking JavaScript."}),(0,a.jsxs)(n.p,{children:["For example, the expression ",(0,a.jsx)(n.code,{children:'.EquipmentID = "foo"'})," would be a valid when expression in a rule, but is not valid JavaScript syntax. The expression ",(0,a.jsx)(n.code,{children:'myStepPage.Equipment == "foo"'})," is valid for both, and allows for easier comparison between the rule and function."]})]}),"\n",(0,a.jsx)(n.h3,{id:"async-execution",children:"Async execution"}),"\n",(0,a.jsx)(n.p,{children:"When calling a data page, function rule, or when rule as part of an expression, the corresponding JavaScript function may be asynchronous. If it is necessary to await execution, then the data transform function must be written as asynchronous."}),"\n",(0,a.jsx)(n.p,{children:"When called from a flow action or UI action, the EPOC platform will automatically await execution of the activity function before rendering the UI. When called from a function or another activity, the function must also be awaited inside of the rule which calls it, which also must be configured as async."}),"\n",(0,a.jsx)(n.p,{children:"When an async call is made inside of nested steps, it is generally necessary to add awaits and asyncs all the way up the tree. For example, if step 1.1.1 uses async inside an expression, then"}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:"It is a good practice to configure activity rules to reference data pages and functions in as few places as possible. Instead of referring to the same data page more than once, it could be referenced one time to copy the needed data to parameters or top-level pages, and then used from there. This will simplify the scripting."})}),"\n",(0,a.jsx)(n.h2,{id:"implementing-methods",children:"Implementing methods"}),"\n",(0,a.jsx)(n.admonition,{type:"danger",children:(0,a.jsx)(n.p,{children:"everything in this section"})}),"\n",(0,a.jsx)(n.h3,{id:"pseudo-methods-1",children:"Pseudo-Methods"}),"\n",(0,a.jsx)(n.h4,{id:"for-each-embedded-page",children:"For: Each Embedded Page"}),"\n",(0,a.jsx)(n.h4,{id:"for-single-iteration-for-loop",children:"For: Single iteration For Loop"}),"\n",(0,a.jsx)(n.h4,{id:"jump-to-later-step-breaking-loop",children:"Jump to later step: breaking loop"}),"\n",(0,a.jsx)(n.h4,{id:"jump-to-later-step-error-handling",children:"Jump to later step: error handling"}),"\n",(0,a.jsx)(n.h3,{id:"call",children:"Call"}),"\n",(0,a.jsx)(n.h3,{id:"apply-datatransform",children:"Apply-DataTransform"}),"\n",(0,a.jsx)(n.h3,{id:"exit-activity",children:"Exit-Activity"}),"\n",(0,a.jsx)(n.h3,{id:"obj-browse",children:"Obj-Browse"}),"\n",(0,a.jsx)(n.h3,{id:"obj-delete",children:"Obj-Delete"}),"\n",(0,a.jsx)(n.h3,{id:"obj-filter",children:"Obj-Filter"}),"\n",(0,a.jsx)(n.h3,{id:"obj-open",children:"Obj-Open"}),"\n",(0,a.jsx)(n.h3,{id:"obj-open-by-handle-",children:"Obj-Open-By-Handle *"}),"\n",(0,a.jsx)(n.h3,{id:"obj-save",children:"Obj-Save"}),"\n",(0,a.jsx)(n.h3,{id:"obj-save-cancel-",children:"Obj-Save-Cancel *"}),"\n",(0,a.jsx)(n.h3,{id:"obj-sort",children:"Obj-Sort"}),"\n",(0,a.jsx)(n.h3,{id:"obj-validate",children:"Obj-Validate"}),"\n",(0,a.jsx)(n.h3,{id:"page-clear-messages",children:"Page-Clear-Messages"}),"\n",(0,a.jsx)(n.h3,{id:"page-copy",children:"Page-Copy"}),"\n",(0,a.jsx)(n.h3,{id:"page-merge-into",children:"Page-Merge-Into"}),"\n",(0,a.jsx)(n.h3,{id:"page-new",children:"Page-New"}),"\n",(0,a.jsx)(n.h3,{id:"page-remove",children:"Page-Remove"}),"\n",(0,a.jsx)(n.h3,{id:"page-rename-",children:"Page-Rename *"}),"\n",(0,a.jsx)(n.h3,{id:"page-set-messages-",children:"Page-Set-Messages *"}),"\n",(0,a.jsx)(n.h3,{id:"property-map-decisiontable-",children:"Property-Map-DecisionTable *"}),"\n",(0,a.jsx)(n.h3,{id:"property-map-decisiontree-",children:"Property-Map-DecisionTree *"}),"\n",(0,a.jsx)(n.h3,{id:"property-remove",children:"Property-Remove"}),"\n",(0,a.jsx)(n.h3,{id:"property-set",children:"Property-Set"}),"\n",(0,a.jsx)(n.h3,{id:"rdb-delete",children:"RDB-Delete"}),"\n",(0,a.jsx)(n.h3,{id:"rdb-list",children:"RDB-List"}),"\n",(0,a.jsx)(n.h3,{id:"rdb-open",children:"RDB-Open"}),"\n",(0,a.jsx)(n.h3,{id:"rdb-save",children:"RDB-Save"}),"\n",(0,a.jsx)(n.h3,{id:"rollback-",children:"Rollback *"}),"\n",(0,a.jsx)(n.h3,{id:"set",children:"Set"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"Method.set(target, value);\n"})}),"\n",(0,a.jsx)(n.h4,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"target"})}),"\n",(0,a.jsx)(n.p,{children:"Represents the Target configured in the rule form. Accepts the following types:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"ClipboardReference of a top-level page, embedded page, or single-value property."}),"\n",(0,a.jsx)(n.li,{children:"PageList"}),"\n",(0,a.jsx)(n.li,{children:"ParameterValue"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"source"})}),"\n",(0,a.jsx)(n.p,{children:"Represents the Source configured in the rule form. Accepts the following types:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"ClipboardReference of a top-level page, embedded page, or single-value property."}),"\n",(0,a.jsx)(n.li,{children:"PageList"}),"\n",(0,a.jsx)(n.li,{children:"ParameterValue"}),"\n",(0,a.jsx)(n.li,{children:"string"}),"\n",(0,a.jsx)(n.li,{children:"number"}),"\n",(0,a.jsx)(n.li,{children:"boolean"}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsxs)(n.p,{children:["When ",(0,a.jsx)(n.code,{children:"target"})," and ",(0,a.jsx)(n.code,{children:"source"})," are both ClipboardReferences corresponding to top-level pages or embedded pages, the two pages must be of the same class. Unlike Pega platform, EPOC currently cannot change the class of a page by assigning a new source to it."]})}),"\n",(0,a.jsx)(n.h4,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'static setExample(Primary, myStepPage, Param) {\n  const OtherPage = new ClipboardReference("OtherPage");\n\n  //assign a literal value to a ClipboardReference of single-value property\n  Transform.set(Primary.pyLabel, "foo");\n\n  //assign a ClipboardReference to another Clipboard Reference\n  Transform.set(Primary.pyStatusWork, OtherPage.pyNote);\n\n  //copy a top-level page to an embedded page\n  Transform.set(Primary.embeddedPageProp, OtherPage);\n\n  //set a parameter value\n  Transform.set(Param.Note, OtherPage.pyNote);\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"remove",children:"Remove"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"Method.remove(target);\n"})}),"\n",(0,a.jsx)(n.h4,{id:"parameters-1",children:"Parameters"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"target"})}),"\n",(0,a.jsx)(n.p,{children:"Represents the Target configured in the rule form. Accepts the following types:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"ClipboardReference of a top-level page, embedded page, or single-value property."}),"\n",(0,a.jsx)(n.li,{children:"PageList"}),"\n",(0,a.jsx)(n.li,{children:"ParameterValue"}),"\n"]}),"\n",(0,a.jsx)(n.h4,{id:"example-1",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'static removeExample(Primary, myStepPage, Param) {\n  const OtherPage = new ClipboardReference("OtherPage");\n\n  //remove a property from a page\n  Transform.remove(Primary.pyLabel);\n\n  //remove a top-level page\n  Transform.remove(OtherPage);\n\n  //remove a parameter value\n  Transform.set(Param.Note);\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"update-page",children:"Update Page"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"Method.updatePage(target, source, content);\n"})}),"\n",(0,a.jsx)(n.h4,{id:"parameters-2",children:"Parameters"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"target"})}),"\n",(0,a.jsx)(n.p,{children:"Represents the Target configured in the rule form. Must be a ClipboardReference corresponding a top-level page or embedded page."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"content"})}),"\n",(0,a.jsxs)(n.p,{children:["A function representing all of the steps nested under the Update Page step. ",(0,a.jsx)(n.code,{children:"target"})," will be passed as the first argument to this function."]}),"\n",(0,a.jsxs)(n.p,{children:["If the content function is async, then ",(0,a.jsx)(n.code,{children:"Transform.updatePage"})," should be awaited."]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["Use ",(0,a.jsx)(n.code,{children:"myStepPage"})," for the first parameter of the ",(0,a.jsx)(n.code,{children:"content"})," function to allow for steps to be configured consistently with the rule form."]})}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsx)(n.p,{children:'EPOC does not support Update Page with a Relation of "with values from" and a Source. If a source page is used, that page must be explicitly referenced within the content function. For consistency, consider configuring the rule to avoid this configuration.'})}),"\n",(0,a.jsx)(n.h4,{id:"example-2",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'static async updatePageExample(Primary, myStepPage, Param) {\n  const OtherPage = new ClipboardReference("OtherPage");\n\n  //updating an embedded page\n  Transform.updatePage(Primary.Owner, (myStepPage) => {\n    Transform.set(myStepPage.FirstName, OtherPage.FirstName);\n  });\n\n  //updating a top level page, with two child steps\n  Transform.updatePage(OtherPage, (myStepPage) => {\n    Transform.set(myStepPage.FirstName, "foo");\n    Transform.set(myStepPage.LastName, "bar");\n  });\n\n  //calling an async content function\n  await Transform.updatePage(OtherPage, async (myStepPage) => {\n    Transform.set(myStepPage.FirstName, await Rule.function.somethingAsync());\n  });\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"apply-data-transform",children:"Apply Data Transform"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"Method.applyDataTransform(target, params);\n"})}),"\n",(0,a.jsx)(n.h4,{id:"parameters-3",children:"Parameters"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"target"})}),"\n",(0,a.jsx)(n.p,{children:"The name of the data transform to run, as a string."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"params"})," (optional)"]}),"\n",(0,a.jsx)(n.p,{children:"Either:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Object containing parameter values to pass to the data transform. The object's keys correspond to parameter names."}),"\n",(0,a.jsx)(n.li,{children:'ParameterPage, to mimic behavior of "Pass Current Paramter Page?" configuration.'}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"If empty, the data transform will be called with no parameters passed."}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"EPOC will determine the page on which to run the data transform, based on where this step is placed in the hierarchy."})}),"\n",(0,a.jsx)(n.h4,{id:"example-3",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'static applyDataTransformExample(Primary, myStepPage, Param) {\n  const OtherPage = new ClipboardReference("OtherPage");\n\n  //running transform on Primary page\n  Transform.applyDataTransform("addPerson");\n\n  //running transform and passing current parameter page\n  Transform.applyDataTransform("addPerson", Param);\n\n  //running transform with parameter values explicitly passed\n  Transform.applyDataTransform("addPerson", {FirstName: "Sam", LastName: Primary.LastName});\n\n  //running transform on another page.\n  Transform.updatePage(OtherPage, (myStepPage) => {\n    Transform.applyDataTransform("pyDefault");\n  })\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"sort",children:"Sort"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"Method.sort(target, sortProperties);\n"})}),"\n",(0,a.jsx)(n.h4,{id:"parameters-4",children:"Parameters"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"target"})}),"\n",(0,a.jsx)(n.p,{children:"PageList to sort."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"sortProperties"})}),"\n",(0,a.jsx)(n.p,{children:'Array of Arrays, each defining one property to be sorted on. The inner array should contain 1 or 2 strings. The first string is the name of the property to sort on. The second string (optional) indicates "ASC" (default) or "DESC" for ascending or descending.'}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsx)(n.p,{children:"EPOC currently allows sorting on single value properties that are directly on the pages of the page list. Properties embedded in pages further down cannot be used for sort."})}),"\n",(0,a.jsx)(n.h4,{id:"example-4",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'static sortExample(Primary, myStepPage, Param) {\n\n  //sort a pagelist, using two sort criteria\n  Transform.sort(Primary.myPageList, [["myString", "ASC"], ["myNumber", "DESC"]]);\n\n  //sort a pagelist, using default ordering (ascending)\n  Transform.sort(Primary.myPageList, [["myString""]]);\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"comment",children:"Comment"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"Method.comment(text);\n"})}),"\n",(0,a.jsx)(n.h4,{id:"parameters-5",children:"Parameters"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"text"})}),"\n",(0,a.jsx)(n.p,{children:"String matching the comment text entered in the rule form."}),"\n",(0,a.jsx)(n.admonition,{type:"note",children:(0,a.jsx)(n.p,{children:"This method does not do anything. It is meant only to capture comments that exist in the rule form so that the order and structure of steps is consistent."})}),"\n",(0,a.jsx)(n.h4,{id:"example-5",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'static commentExample(Primary, myStepPage, Param) {\n\n  //comment which does not do anything\n  Transform.comment("Stub data transform to be extended in parent classes.");\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"when",children:"When"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"Method.when(condition, content);\n"})}),"\n",(0,a.jsx)(n.h4,{id:"parameters-6",children:"Parameters"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"condition"})}),"\n",(0,a.jsx)(n.p,{children:"If set to true, the content function will be called. If set to false, it will not. If the value is a string, the when rule of that name will be executed."}),"\n",(0,a.jsx)(n.p,{children:"If the when rule requires async execution, then Transform.when should be awaited. The content function will not execute or skip until the when rule resolves."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"content"})}),"\n",(0,a.jsx)(n.p,{children:"A function representing all of the steps nested under the Update Page step."}),"\n",(0,a.jsxs)(n.p,{children:["If the content function is async, or ",(0,a.jsx)(n.code,{children:"condition"})," references a When rule which is async, then Transform.when should be awaited."]}),"\n",(0,a.jsx)(n.h4,{id:"example-6",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'static async whenExample(Primary, myStepPage, Param) {\n\n  //with a boolean expression evaluating the false\n  Transform.set(Primary.pyLabel, "foo");\n  Transform.when(Primary.pyLabel == "bar", () => {\n    Transform.comment("This step will not run.");\n  });\n\n  //with a boolean expression evaluating to true\n  Transform.when(Primary.pyLabel == "foo", () => {\n    Transform.comment("This step will run.");\n  })\n\n  //with a when rule\n  Transform.when("Resolved", () => {\n    Transform.comment("This step will run if the when rule Resolved evaluates to true.");\n  })\n\n  //with an async when rule\n  await Transform.when("HasOtherCase", () => {\n    Transform.comment("This step will run if the when rule HasOtherCase evaluates to true, but it will not execute until the When rule\'s promise resolves.");\n  })\n\n  //with an async content function\n  await Transform.when(true, async () => {\n    await Transform.set(Primary.FirstName, await Rule.function.somethingAsync());\n  })\n\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"otherwise-when",children:"Otherwise When"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"Method.otherwiseWhen(condition, content);\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsxs)(n.p,{children:["To function as expected, this must be directly preceded by a ",(0,a.jsx)(n.code,{children:"Method.when"})," or another ",(0,a.jsx)(n.code,{children:"Method.otherwiseWhen"})," step"]})}),"\n",(0,a.jsx)(n.h4,{id:"parameters-7",children:"Parameters"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"condition"})}),"\n",(0,a.jsxs)(n.p,{children:["Same usage as ",(0,a.jsx)(n.code,{children:"condition"})," for ",(0,a.jsx)(n.code,{children:"Method.when"}),". However this step also requires that the preceding ",(0,a.jsx)(n.code,{children:"Method.when"})," step and all ",(0,a.jsx)(n.code,{children:"Method.otherwiseWhen"})," steps between these two all had conditions evaluate to false."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"content"})}),"\n",(0,a.jsx)(n.p,{children:"A function representing all of the steps nested under the Update Page step."}),"\n",(0,a.jsxs)(n.p,{children:["If the content function is async, or ",(0,a.jsx)(n.code,{children:"condition"})," references a When rule which is async, then Transform.otherwiseWhen should be awaited."]}),"\n",(0,a.jsx)(n.h4,{id:"example-7",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'static async otherwiseWhenExample(Primary, myStepPage, Param) {\n\n  //skipping execution when the previous when was true\n  Transform.when(true, () => {\n    Transform.comment("This step will run.");\n  });\n  Transform.otherwiseWhen(true, () => {\n    Transform.comment("This step will not run. Although the condition is true, the previous when rule was true.");\n  });\n\n  //skipping execution when the previous when was false but another otherwise When was ture\n  Transform.when(false, () => {\n    Transform.comment("This step will not run.");\n  });\n  Transform.otherwiseWhen(true, () => {\n    Transform.comment("This step will run.");\n  });\n  Transform.otherwiseWhen(false, () => {\n    Transform.comment("This step not run, because the previous otherwiseWhen step did run.");\n  });\n\n  //with a when rule\n  Transform.when(false, () => {\n    Transform.comment("This step will not run.")\n  });\n  Transform.otherwiseWhen("Resolved", () => {\n    Transform.comment("This step will run if the when rule Resolved evaluates to true.")\n  });\n\n  //with an async when rule\n  Transform.when(false, () => {\n    Transform.comment("This step will not run.")\n  });\n  await Transform.otherwiseWhen("HasOtherCase", () => {\n    Transform.comment("This step will run if the when rule HasOtherCase evaluates to true, but it will not execute until the When rule\'s promise resolves.")\n  })\n\n  //with an async content function\n  Transform.when(false, () => {\n    Transform.comment("This step will not run.")\n  });\n  await Transform.otherwiseWhen(true, async () => {\n    await Transform.set(Primary.FirstName, await Rule.function.somethingAsync());\n  })\n\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"otherwise",children:"Otherwise"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"Method.otherwise(content);\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsxs)(n.p,{children:["To function as expected, this must be directly preceded by a ",(0,a.jsx)(n.code,{children:"Method.when"})," or ",(0,a.jsx)(n.code,{children:"Method.otherwiseWhen"})," step"]})}),"\n",(0,a.jsx)(n.h4,{id:"parameters-8",children:"Parameters"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"content"})}),"\n",(0,a.jsxs)(n.p,{children:["A function representing all of the steps nested under the Update Page step. The content function will be executed only if the preceding ",(0,a.jsx)(n.code,{children:"Method.when"})," step and all ",(0,a.jsx)(n.code,{children:"Method.otherwiseWhen"})," steps between these two all had conditions evaluate to false."]}),"\n",(0,a.jsx)(n.p,{children:"If the content function is async, then Transform.otherwise should be awaited."}),"\n",(0,a.jsx)(n.h4,{id:"example-8",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'static async otherwiseExample(Primary, myStepPage, Param) {\n\n  //skipping execution when the previous when was true\n  Transform.when(true, () => {\n    Transform.comment("This step will run.");\n  });\n  Transform.otherwise(() => {\n    Transform.comment("This step will not run because the previous when was true");\n  });\n\n  //skipping execution when the previous when was false but another otherwise When was ture\n  Transform.when(false, () => {\n    Transform.comment("This step will not run.");\n  });\n  Transform.otherwiseWhen(true, () => {\n    Transform.comment("This step will run.");\n  });\n  Transform.otherwise(() => {\n    Transform.comment("This step not run, because the previous otherwiseWhen step did run.");\n  });\n\n  //successful run\n  Transform.when(false, () => {\n    Transform.comment("This step will not run.")\n  });\n  Transform.otherwiseWhen(false, () => {\n    Transform.comment("This step will not run.")\n  });\n  Transform.otherwise(() => {\n    Transform.comment("This step will run.")\n  });\n\n  //with an async content function\n  Transform.when(false, () => {\n    Transform.comment("This step will not run.")\n  });\n  await Transform.otherwise(async () => {\n    await Transform.set(Primary.FirstName, await Rule.function.somethingAsync());\n  })\n\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"append-to",children:"Append to"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"Method.appendTo(target, source);\n"})}),"\n",(0,a.jsx)(n.h4,{id:"parameters-9",children:"Parameters"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"target"})}),"\n",(0,a.jsx)(n.p,{children:"A PageList to which a page will be added. If this references a property that is missing, it will initialize an array of length 1."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"source"})," (optional)"]}),"\n",(0,a.jsxs)(n.p,{children:["The Relation configuration will be inferred from this value. If ",(0,a.jsx)(n.code,{children:"source"}),' is missing, this is equivalent to "a new page". If ',(0,a.jsx)(n.code,{children:"source"}),' is a ClipboardReference, this is equivalent to "an existing page". If ',(0,a.jsx)(n.code,{children:"source"}),' is a PageList, this is equivalent to "each page in".']}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:'There is no script equivalent for "current source page" relation. It is suggested that these steps be modified to use "an existing page" with myStepPage as the source.'})}),"\n",(0,a.jsx)(n.h4,{id:"example-9",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'static appendToExample(Primary, myStepPage, Param) {\n  const CurrentOperation = new ClipboardReference("CurrentOperation");\n\n  //appending an empty page\n  Transform.appendTo(Primary.OperationsList);\n\n  //appending an existing page\n  Transform.appendTo(Primary.OperationsList, CurrentOperation);\n\n  //appending a PageList\n  Transform.appendTo(Primary.OperationsList, Primary.NewOperationsList);\n\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"append-and-map-to",children:"Append and Map to"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"Method.appendAndMapTo(target, source, content);\n"})}),"\n",(0,a.jsx)(n.h4,{id:"parameters-10",children:"Parameters"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"target"})}),"\n",(0,a.jsx)(n.p,{children:"A PageList to which a page will be added. If this references a property that is missing, it will initialize an array of length 1."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"source"})," (optional)"]}),"\n",(0,a.jsxs)(n.p,{children:["The Relation configuration will be inferred from this value. If ",(0,a.jsx)(n.code,{children:"source"}),' is missing, this is equivalent to "a new page". If ',(0,a.jsx)(n.code,{children:"source"}),' is a ClipboardReference, this is equivalent to "an existing page". If ',(0,a.jsx)(n.code,{children:"source"}),' is a PageList, this is equivalent to "each page in".']}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsx)(n.p,{children:'There is no script equivalent for "current source page" relation. It is suggested that these steps be modified to use "an existing page" with myStepPage as the source.'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"content"})}),"\n",(0,a.jsx)(n.p,{children:"A function representing all of the steps nested under the Append and Map To step. The first argument will be a ClipboardReference representing the page which was appended. The second argument will be a ClipboardReference representing the source ClipboardReference, or representing the page of the source PageList being looped over."}),"\n",(0,a.jsxs)(n.p,{children:["If ",(0,a.jsx)(n.code,{children:"source"})," was a PageList, then the content function will be called once for each page that gets appended."]}),"\n",(0,a.jsx)(n.p,{children:"If the content function is async, then Transform.appendAndMapTo should be awaited."}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsxs)(n.p,{children:["In the rule form, the child steps will resolve ",(0,a.jsx)(n.code,{children:"myStepPage"}),' differently based on whether it is referenced in the source or target column. This is not possible in JavaScript, so the source page must be bound to a different parameter. It is recommended to use "mySourcePage". The scripted version will differ from the rule form in this way, but it is unavoidable.']})}),"\n",(0,a.jsx)(n.h4,{id:"example-10",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'static async appendAndMapToExample(Primary, myStepPage, Param) {\n  const CurrentOperation = new ClipboardReference("CurrentOperation");\n\n  //append an empty page and then set pyLabel on the newly appended page\n  Transform.appendAndMapTo(Primary.OperationsList, "", (myStepPage) => {\n    Transform.set(myStepPage.pyLabel, "foo");\n  });\n\n  //append an existing page and copy values\n  Transform.appendAndMapTo(Primary.OperationsList, CurrentOperation, (myStepPage) => {\n    Transform.set(myStepPage.pyLabel, CurrentOperation.pyLabel);\n  });\n\n  //appending a PageList\n  Transform.appendAndMapTo(Primary.OperationsList, Primary.NewOperationsList, (myStepPage, mySourcePage) => {\n    Transform.set(myStepPage.pyLabel, mySourcePage.pyLabel);\n  });\n\n  //appending a PageList with async function\n  await Transform.appendAndMapTo(Primary.OperationsList, Primary.NewOperationsList, async (myStepPage, mySourcePage) => {\n    Transform.set(myStepPage.pyLabel, await Rule.function.somethingAsync(mySourcePage.pyLabel));\n  });\n\n}\n'})}),"\n",(0,a.jsx)(n.h3,{id:"for-each-page-in",children:"For Each Page In"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"Method.forEachPageIn(target, content);\n"})}),"\n",(0,a.jsx)(n.h4,{id:"parameters-11",children:"Parameters"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"target"})}),"\n",(0,a.jsx)(n.p,{children:"A PageList to iterate over."}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.code,{children:"content"})}),"\n",(0,a.jsx)(n.p,{children:"A function representing all of the steps nested under the For Each Page In step. The first argument will be a ClipboardReference representing the page for the current iteration."}),"\n",(0,a.jsx)(n.p,{children:"If the content function is async, then Transform.updatePage should be awaited."}),"\n",(0,a.jsx)(n.h4,{id:"example-11",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"static async forEachPageInExample(Primary, myStepPage, Param) {\n\n  //iterating a page list to set a property\n  Transform.forEachPageIn(Primary.OperationsList, (myStepPage) => {\n    Transform.set(myStepPage.pyLabel, 'foo');\n  });\n\n  //iterating a page list and applying an async function\n  await Transform.forEachPageIn(Primary.OperationsList, async (myStepPage) => {\n    Transform.set(myStepPage.pyLabel, await Rule.function.somethingAsync('foo'));\n  });\n\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"exit-for-each",children:"Exit For Each"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"Method.exitForEach();\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Exits the currently running ",(0,a.jsx)(n.code,{children:"Method.forEachPageIn"}),", without running any subsequent steps in the current iteration nor any future iterations. If embedded in multiple ",(0,a.jsx)(n.code,{children:"Method.forEachPageIn"}),", only the closest one up the stack is aborted."]}),"\n",(0,a.jsx)(n.h4,{id:"example-12",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"static async exitForEachExample(Primary, myStepPage, Param) {\n\n  //iterating a page list to set a property, and aborting if a value is true\n  Transform.forEachPageIn(Primary.OperationsList, (myStepPage) => {\n    Transform.set(myStepPage.pyLabel, 'foo');\n    Transform.when(\"IsInactive\", () => {\n        Transform.exitForEach();\n    })\n  });\n\n}\n"})}),"\n",(0,a.jsx)(n.h3,{id:"exit-data-transform",children:"Exit Data Transform"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:"Method.exitDataTransform();\n"})}),"\n",(0,a.jsx)(n.p,{children:"Exits the currently running data transform, regardless of how many nested steps are in between."}),"\n",(0,a.jsx)(n.admonition,{type:"warning",children:(0,a.jsx)(n.p,{children:"This works by throwing a specific error, which is caught and handled by the platform when the data transform is called a platform method. If the function is manually invoked for any other reason, the error must be handled, although manually invoking the data transform function directly is not a good practice."})}),"\n",(0,a.jsx)(n.h4,{id:"example-13",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'static async exitDataTransformExample(Primary, myStepPage, Param) {\n\n  //exiting a data transform\n  Transform.comment("This step will execute.");\n  Transform.when(true, () => {\n    Transform.exitDataTransform();\n  });\n  Transform.comment("This step will not execute.");\n}\n'})}),"\n",(0,a.jsx)(n.h2,{id:"backlog",children:"Backlog"}),"\n",(0,a.jsx)(n.p,{children:"The following items may be enhanced in future releases:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Method to auto-generate EPOC compliant functions."}),"\n",(0,a.jsx)(n.li,{children:'Support for "Call superclass transform".'}),"\n",(0,a.jsx)(n.li,{children:"Support for data transforms called from flows (support is unlikely)"}),"\n",(0,a.jsx)(n.li,{children:"Allow changing of page classes during Set."}),"\n",(0,a.jsx)(n.li,{children:"Allow sorting pagelists on properties of embedded pages."}),"\n",(0,a.jsx)(n.li,{children:"Append and Map To needs two arguments passed to the content function. Do the same for Update Page."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},7631:(e,n,t)=>{t.d(n,{A:()=>a});const a=t.p+"assets/images/activityExample01-0cca2020e9624369cc88c998c86fb678.png"},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>l});var a=t(6540);const r={},i=a.createContext(r);function s(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);